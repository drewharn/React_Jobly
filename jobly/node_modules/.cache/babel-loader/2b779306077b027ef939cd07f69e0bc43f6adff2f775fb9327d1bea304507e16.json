{"ast":null,"code":"import React,{useContext}from\"react\";import{Route,Redirect}from\"react-router-dom\";import UserContext from\"../auth/UserContext\";/** \"Higher-Order Component\" for private routes.\n * \n * In routing component, use these instead of <Route ...>. This component\n * will check if there is a valid current user and only continues to the\n * route if so. If no user is present, redirects to login form.\n */import{jsx as _jsx}from\"react/jsx-runtime\";function PrivateRoute(_ref){let{exact,path,children}=_ref;const{currentUser}=useContext(UserContext);console.debug(\"PrivateRoute\",\"exact=\",exact,\"path=\",path,\"currentUser=\",currentUser);if(!currentUser){return/*#__PURE__*/_jsx(Redirect,{to:\"/login\"});}return/*#__PURE__*/_jsx(Route,{exact:exact,path:path,children:children});}export default PrivateRoute;","map":{"version":3,"names":["React","useContext","Route","Redirect","UserContext","jsx","_jsx","PrivateRoute","_ref","exact","path","children","currentUser","console","debug","to"],"sources":["/Users/drewharnedy/Documents/USFCodingBootcamp/React-Jobly/react-jobly/jobly/src/routes-nav/PrivateRoute.js"],"sourcesContent":["import React, { useContext } from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport UserContext from \"../auth/UserContext\";\n\n/** \"Higher-Order Component\" for private routes.\n * \n * In routing component, use these instead of <Route ...>. This component\n * will check if there is a valid current user and only continues to the\n * route if so. If no user is present, redirects to login form.\n */\n\nfunction PrivateRoute({ exact, path, children }) {\n    const { currentUser } = useContext(UserContext);\n\n    console.debug(\n        \"PrivateRoute\",\n        \"exact=\", exact,\n        \"path=\", path,\n        \"currentUser=\", currentUser,\n    );\n\n    if (!currentUser) {\n        return <Redirect to=\"/login\" />;\n    }\n\n    return (\n        <Route exact={exact} path={path}>\n            {children}\n        </Route>\n    );\n}\n\nexport default PrivateRoute;"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,UAAU,KAAQ,OAAO,CACzC,OAASC,KAAK,CAAEC,QAAQ,KAAQ,kBAAkB,CAClD,MAAO,CAAAC,WAAW,KAAM,qBAAqB,CAE7C;AACA;AACA;AACA;AACA;AACA,GALA,OAAAC,GAAA,IAAAC,IAAA,yBAOA,QAAS,CAAAC,YAAYA,CAAAC,IAAA,CAA4B,IAA3B,CAAEC,KAAK,CAAEC,IAAI,CAAEC,QAAS,CAAC,CAAAH,IAAA,CAC3C,KAAM,CAAEI,WAAY,CAAC,CAAGX,UAAU,CAACG,WAAW,CAAC,CAE/CS,OAAO,CAACC,KAAK,CACT,cAAc,CACd,QAAQ,CAAEL,KAAK,CACf,OAAO,CAAEC,IAAI,CACb,cAAc,CAAEE,WACpB,CAAC,CAED,GAAI,CAACA,WAAW,CAAE,CACd,mBAAON,IAAA,CAACH,QAAQ,EAACY,EAAE,CAAC,QAAQ,CAAE,CAAC,CACnC,CAEA,mBACIT,IAAA,CAACJ,KAAK,EAACO,KAAK,CAAEA,KAAM,CAACC,IAAI,CAAEA,IAAK,CAAAC,QAAA,CAC3BA,QAAQ,CACN,CAAC,CAEhB,CAEA,cAAe,CAAAJ,YAAY","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}