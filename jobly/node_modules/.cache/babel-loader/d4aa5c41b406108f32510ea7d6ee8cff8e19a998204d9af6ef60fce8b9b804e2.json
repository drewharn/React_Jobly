{"ast":null,"code":"var _jsxFileName = \"/Users/drewharnedy/Documents/USFCodingBootcamp/React-Jobly/react-jobly/jobly/src/companies/CompanyDetail.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport JoblyApi from \"../api/api\";\nimport JobCardList from \"../jobs/JobCardList\";\nimport LoadingSpinner from \"../common/LoadingSpinner\";\n\n/** Company Detail page.\n * \n * Renders information about company, along with the jobs at that company.\n * \n * Routed at /companies/:handle\n * \n * Routes -> CompanyDetail -> JobCardList\n */\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction CompanyDetail() {\n  _s();\n  const {\n    handle\n  } = useParams();\n  console.debug(\"CompanyDetail\", \"handle=\", handle);\n  const [company, setCompany] = useState(null);\n  useEffect(function getCompanyAndJobsForUser() {\n    async function getCompany() {\n      setCompany(await JoblyApi.getCompany(handle));\n    }\n    getCompany();\n  }, [handle]);\n  if (!company) return /*#__PURE__*/_jsxDEV(LoadingSpinner, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 26\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"CompanyDetail col-md-8 offset-md-2\",\n    children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n      children: company.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: company.description\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(JobCardList, {\n      jobs: company.jobs\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 9\n  }, this);\n}\n_s(CompanyDetail, \"iXW0sHYhmtaDyknNWiCsI22xi70=\", false, function () {\n  return [useParams];\n});\n_c = CompanyDetail;\nexport default CompanyDetail;\nvar _c;\n$RefreshReg$(_c, \"CompanyDetail\");","map":{"version":3,"names":["React","useState","useEffect","useParams","JoblyApi","JobCardList","LoadingSpinner","jsxDEV","_jsxDEV","CompanyDetail","_s","handle","console","debug","company","setCompany","getCompanyAndJobsForUser","getCompany","fileName","_jsxFileName","lineNumber","columnNumber","className","children","name","description","jobs","_c","$RefreshReg$"],"sources":["/Users/drewharnedy/Documents/USFCodingBootcamp/React-Jobly/react-jobly/jobly/src/companies/CompanyDetail.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport JoblyApi from \"../api/api\";\nimport JobCardList from \"../jobs/JobCardList\";\nimport LoadingSpinner from \"../common/LoadingSpinner\";\n\n/** Company Detail page.\n * \n * Renders information about company, along with the jobs at that company.\n * \n * Routed at /companies/:handle\n * \n * Routes -> CompanyDetail -> JobCardList\n */\n\nfunction CompanyDetail() {\n    const { handle } = useParams();\n    console.debug(\"CompanyDetail\", \"handle=\", handle);\n\n    const [company, setCompany] = useState(null);\n\n    useEffect(function getCompanyAndJobsForUser() {\n        async function getCompany() {\n            setCompany(await JoblyApi.getCompany(handle));\n        }\n\n        getCompany();\n    }, [handle]);\n\n    if (!company) return <LoadingSpinner />;\n\n    return (\n        <div className=\"CompanyDetail col-md-8 offset-md-2\">\n            <h4>{company.name}</h4>\n            <p>{company.description}</p>\n            <JobCardList jobs={company.jobs} />\n        </div>\n    );\n}\n\nexport default CompanyDetail;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,SAAS,QAAQ,kBAAkB;AAC5C,OAAOC,QAAQ,MAAM,YAAY;AACjC,OAAOC,WAAW,MAAM,qBAAqB;AAC7C,OAAOC,cAAc,MAAM,0BAA0B;;AAErD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA,SAAAC,MAAA,IAAAC,OAAA;AASA,SAASC,aAAaA,CAAA,EAAG;EAAAC,EAAA;EACrB,MAAM;IAAEC;EAAO,CAAC,GAAGR,SAAS,CAAC,CAAC;EAC9BS,OAAO,CAACC,KAAK,CAAC,eAAe,EAAE,SAAS,EAAEF,MAAM,CAAC;EAEjD,MAAM,CAACG,OAAO,EAAEC,UAAU,CAAC,GAAGd,QAAQ,CAAC,IAAI,CAAC;EAE5CC,SAAS,CAAC,SAASc,wBAAwBA,CAAA,EAAG;IAC1C,eAAeC,UAAUA,CAAA,EAAG;MACxBF,UAAU,CAAC,MAAMX,QAAQ,CAACa,UAAU,CAACN,MAAM,CAAC,CAAC;IACjD;IAEAM,UAAU,CAAC,CAAC;EAChB,CAAC,EAAE,CAACN,MAAM,CAAC,CAAC;EAEZ,IAAI,CAACG,OAAO,EAAE,oBAAON,OAAA,CAACF,cAAc;IAAAY,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;EAEvC,oBACIb,OAAA;IAAKc,SAAS,EAAC,oCAAoC;IAAAC,QAAA,gBAC/Cf,OAAA;MAAAe,QAAA,EAAKT,OAAO,CAACU;IAAI;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACvBb,OAAA;MAAAe,QAAA,EAAIT,OAAO,CAACW;IAAW;MAAAP,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC5Bb,OAAA,CAACH,WAAW;MAACqB,IAAI,EAAEZ,OAAO,CAACY;IAAK;MAAAR,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAClC,CAAC;AAEd;AAACX,EAAA,CAvBQD,aAAa;EAAA,QACCN,SAAS;AAAA;AAAAwB,EAAA,GADvBlB,aAAa;AAyBtB,eAAeA,aAAa;AAAC,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}