{"ast":null,"code":"import React from\"react\";import{Switch,Route,Redirect}from\"react-router-dom\";import Homepage from\"../homepage/Homepage\";import CompanyList from\"../companies/CompanyList\";import JobList from\"../jobs/JobList\";import CompanyDetail from\"../companies/CompanyDetail\";import LoginForm from\"../auth/LoginForm\";import ProfileForm from\"../profiles/ProfileForm\";import SignupForm from\"../auth/SignupForm\";import PrivateRoute from\"./PrivateRoute\";/** Site-wide routes.\n * \n * Parts of site should only be visitable when logged in. Those routes are\n * wrapped by <PrivateRoute>, which is an authorization component.\n * \n * Visiting a non-existent route redirects to the homepage.\n */import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function Routes(_ref){let{login,signup}=_ref;console.debug(\"Routes\",\"login=\".concat(typeof login),\"register=\".concat(typeof register));return/*#__PURE__*/_jsx(\"div\",{className:\"pt-5\",children:/*#__PURE__*/_jsxs(Switch,{children:[/*#__PURE__*/_jsx(Route,{exact:true,path:\"/\",children:/*#__PURE__*/_jsx(Homepage,{})}),/*#__PURE__*/_jsx(Route,{exact:true,path:\"/login\",children:/*#__PURE__*/_jsx(LoginForm,{login:login})}),/*#__PURE__*/_jsx(Route,{exact:true,path:\"/signup\",children:/*#__PURE__*/_jsx(LoginForm,{signup:signup})}),/*#__PURE__*/_jsx(PrivateRoute,{exact:true,path:\"/companies\",children:/*#__PURE__*/_jsx(CompanyList,{})}),/*#__PURE__*/_jsx(PrivateRoute,{exact:true,path:\"/jobs\",children:/*#__PURE__*/_jsx(JobList,{})}),/*#__PURE__*/_jsx(PrivateRoute,{exact:true,path:\"/companies/:handle\",children:/*#__PURE__*/_jsx(CompanyDetail,{})}),/*#__PURE__*/_jsx(PrivateRoute,{path:\"/profile\",children:/*#__PURE__*/_jsx(ProfileForm,{})}),/*#__PURE__*/_jsx(Redirect,{to:\"/\"})]})});}export default Routes;","map":{"version":3,"names":["React","Switch","Route","Redirect","Homepage","CompanyList","JobList","CompanyDetail","LoginForm","ProfileForm","SignupForm","PrivateRoute","jsx","_jsx","jsxs","_jsxs","Routes","_ref","login","signup","console","debug","concat","register","className","children","exact","path","to"],"sources":["/Users/drewharnedy/Documents/USFCodingBootcamp/React-Jobly/react-jobly/jobly/src/routes-nav/Routes.js"],"sourcesContent":["import React from \"react\";\nimport { Switch, Route, Redirect } from \"react-router-dom\";\nimport Homepage from \"../homepage/Homepage\";\nimport CompanyList from \"../companies/CompanyList\";\nimport JobList from \"../jobs/JobList\";\nimport CompanyDetail from \"../companies/CompanyDetail\";\nimport LoginForm from \"../auth/LoginForm\";\nimport ProfileForm from \"../profiles/ProfileForm\";\nimport SignupForm from \"../auth/SignupForm\";\nimport PrivateRoute from \"./PrivateRoute\";\n\n/** Site-wide routes.\n * \n * Parts of site should only be visitable when logged in. Those routes are\n * wrapped by <PrivateRoute>, which is an authorization component.\n * \n * Visiting a non-existent route redirects to the homepage.\n */\n\nfunction Routes({ login, signup }) {\n    console.debug(\n        \"Routes\",\n        `login=${typeof login}`,\n        `register=${typeof register}`,\n    );\n\n    return (\n        <div className=\"pt-5\">\n            <Switch>\n\n                <Route exact path=\"/\">\n                  <Homepage />\n                </Route>\n\n                <Route exact path=\"/login\">\n                  <LoginForm login={login} />\n                </Route>\n\n                <Route exact path=\"/signup\">\n                  <LoginForm signup={signup} />\n                </Route>\n\n                <PrivateRoute exact path=\"/companies\">\n                  <CompanyList />\n                </PrivateRoute>\n\n                <PrivateRoute exact path=\"/jobs\">\n                  <JobList />\n                </PrivateRoute>\n\n                <PrivateRoute exact path=\"/companies/:handle\">\n                  <CompanyDetail />\n                </PrivateRoute>\n\n                <PrivateRoute path=\"/profile\">\n                  <ProfileForm />\n                </PrivateRoute>\n\n                <Redirect to=\"/\" />\n            </Switch>\n        </div>\n    );\n}\n\nexport default Routes;"],"mappings":"AAAA,MAAO,CAAAA,KAAK,KAAM,OAAO,CACzB,OAASC,MAAM,CAAEC,KAAK,CAAEC,QAAQ,KAAQ,kBAAkB,CAC1D,MAAO,CAAAC,QAAQ,KAAM,sBAAsB,CAC3C,MAAO,CAAAC,WAAW,KAAM,0BAA0B,CAClD,MAAO,CAAAC,OAAO,KAAM,iBAAiB,CACrC,MAAO,CAAAC,aAAa,KAAM,4BAA4B,CACtD,MAAO,CAAAC,SAAS,KAAM,mBAAmB,CACzC,MAAO,CAAAC,WAAW,KAAM,yBAAyB,CACjD,MAAO,CAAAC,UAAU,KAAM,oBAAoB,CAC3C,MAAO,CAAAC,YAAY,KAAM,gBAAgB,CAEzC;AACA;AACA;AACA;AACA;AACA;AACA,GANA,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAQA,QAAS,CAAAC,MAAMA,CAAAC,IAAA,CAAoB,IAAnB,CAAEC,KAAK,CAAEC,MAAO,CAAC,CAAAF,IAAA,CAC7BG,OAAO,CAACC,KAAK,CACT,QAAQ,UAAAC,MAAA,CACC,MAAO,CAAAJ,KAAK,cAAAI,MAAA,CACT,MAAO,CAAAC,QAAQ,CAC/B,CAAC,CAED,mBACIV,IAAA,QAAKW,SAAS,CAAC,MAAM,CAAAC,QAAA,cACjBV,KAAA,CAACd,MAAM,EAAAwB,QAAA,eAEHZ,IAAA,CAACX,KAAK,EAACwB,KAAK,MAACC,IAAI,CAAC,GAAG,CAAAF,QAAA,cACnBZ,IAAA,CAACT,QAAQ,GAAE,CAAC,CACP,CAAC,cAERS,IAAA,CAACX,KAAK,EAACwB,KAAK,MAACC,IAAI,CAAC,QAAQ,CAAAF,QAAA,cACxBZ,IAAA,CAACL,SAAS,EAACU,KAAK,CAAEA,KAAM,CAAE,CAAC,CACtB,CAAC,cAERL,IAAA,CAACX,KAAK,EAACwB,KAAK,MAACC,IAAI,CAAC,SAAS,CAAAF,QAAA,cACzBZ,IAAA,CAACL,SAAS,EAACW,MAAM,CAAEA,MAAO,CAAE,CAAC,CACxB,CAAC,cAERN,IAAA,CAACF,YAAY,EAACe,KAAK,MAACC,IAAI,CAAC,YAAY,CAAAF,QAAA,cACnCZ,IAAA,CAACR,WAAW,GAAE,CAAC,CACH,CAAC,cAEfQ,IAAA,CAACF,YAAY,EAACe,KAAK,MAACC,IAAI,CAAC,OAAO,CAAAF,QAAA,cAC9BZ,IAAA,CAACP,OAAO,GAAE,CAAC,CACC,CAAC,cAEfO,IAAA,CAACF,YAAY,EAACe,KAAK,MAACC,IAAI,CAAC,oBAAoB,CAAAF,QAAA,cAC3CZ,IAAA,CAACN,aAAa,GAAE,CAAC,CACL,CAAC,cAEfM,IAAA,CAACF,YAAY,EAACgB,IAAI,CAAC,UAAU,CAAAF,QAAA,cAC3BZ,IAAA,CAACJ,WAAW,GAAE,CAAC,CACH,CAAC,cAEfI,IAAA,CAACV,QAAQ,EAACyB,EAAE,CAAC,GAAG,CAAE,CAAC,EACf,CAAC,CACR,CAAC,CAEd,CAEA,cAAe,CAAAZ,MAAM","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}